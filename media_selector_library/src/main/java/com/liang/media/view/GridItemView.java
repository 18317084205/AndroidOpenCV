package com.liang.media.view;import android.content.Context;import android.support.v4.content.ContextCompat;import android.text.format.DateUtils;import android.util.AttributeSet;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.widget.CheckBox;import android.widget.FrameLayout;import android.widget.ImageView;import android.widget.TextView;import com.liang.media.MediaType;import com.liang.media.R;import com.liang.media.RequestConfig;import com.liang.media.bean.MediaInfo;public class GridItemView extends FrameLayout implements View.OnClickListener {    private ImageView media_icon;    private TextView media_name;    private TextView media_info;    private CheckBox media_checkBox;    private MediaInfo info;    private OnGridItemListener onGridItemListener;    public GridItemView(Context context) {        this(context, null);    }    public GridItemView(Context context, AttributeSet attrs) {        this(context, attrs, 0);    }    public GridItemView(Context context, AttributeSet attrs, int defStyle) {        super(context, attrs, defStyle);        init();    }    @Override    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {        super.onMeasure(widthMeasureSpec, widthMeasureSpec);    }    private void init() {        LayoutInflater.from(getContext()).inflate(R.layout.grid_item_view, this, true);        media_icon = findViewById(R.id.image);        media_name = findViewById(R.id.media_name);        media_info = findViewById(R.id.media_info);        media_checkBox = findViewById(R.id.media_checkbox);    }    public void bindMediaInfo(MediaInfo mediaInfo) {        this.info = mediaInfo;        media_info.setText(                DateUtils.formatElapsedTime(info.duration / 1000));        media_name.setText(info.name);        media_name.setVisibility(MediaType.isAudio(info.mimeType) ? View.VISIBLE : View.GONE);        media_info.setVisibility(MediaType.isImage(info.mimeType) || info.mimeType.isEmpty() ?                View.GONE : View.VISIBLE);        if (MediaType.isVideo(info.mimeType)) {            media_info.setCompoundDrawablesWithIntrinsicBounds(ContextCompat.getDrawable(getContext(), R.drawable.type_video), null, null, null);        } else if (MediaType.isAudio(info.mimeType)) {            media_info.setCompoundDrawablesWithIntrinsicBounds(ContextCompat.getDrawable(getContext(), R.drawable.type_audio), null, null, null);        }        if (info.mimeType.isEmpty()) {        } else if (MediaType.isVideo(info.mimeType) || MediaType.isImage(info.mimeType)) {            RequestConfig.getInstance().imageLoader                    .loadThumbnailImage(getContext(), info.uri, media_icon);        } else {            RequestConfig.getInstance().imageLoader                    .loadAudioImage(getContext(), info.uri, media_icon);        }        media_checkBox.setVisibility(RequestConfig.getInstance().isCheck() ? VISIBLE : GONE);        setOnClickListener(this);        media_checkBox.setOnClickListener(this);    }    public void setOnGridItemListener(OnGridItemListener onItemListener) {        this.onGridItemListener = onItemListener;    }    public void setChecked(boolean checked) {        media_checkBox.setChecked(checked);    }    @Override    public void onClick(View v) {        if (v == this) {            if (onGridItemListener != null) {                onGridItemListener.onItemPressed(info);            }        }        if (v == media_checkBox) {            if (onGridItemListener != null) {                Log.e("GridItemView", "onCheckedChanged: " + media_checkBox.isChecked());                onGridItemListener.onItemCheckedChanged(info, media_checkBox.isChecked());            }        }    }    public interface OnGridItemListener {        void onItemCheckedChanged(MediaInfo mediaInfo, boolean isChecked);        void onItemPressed(MediaInfo mediaInfo);    }}